<div class="form_content">
  <div class="artifacts_plan_section popup_form">
    <textarea id="artifact_template_build" class="template">
      <%= render :partial => 'built_in_artifact_table_headers' %>
      <%= scope[:form].fields_for :artifactConfigs, :index => "" do |var_form| %>
      <td class="name_value_cell">
        <label>Build Artifact</label>
        <%= var_form.hidden_field "artifactTypeValue", :id => nil, :value => 'Build Artifact' -%>
      </td>
      <%= render :partial => 'builtin_artifact_form', :locals => {:scope => {:var_form => var_form}} %>
      <% end %>
    </textarea>
    <textarea id="artifact_template_test" class="template">
      <%= render :partial => 'built_in_artifact_table_headers' %>
      <%= scope[:form].fields_for :artifactConfigs, :index => "" do |var_form| %>
      <td class="name_value_cell">
        <label>Test Artifact</label>
        <%= var_form.hidden_field "artifactTypeValue", :id => nil, :value => 'Test Artifact' -%>
      </td>
      <%= render :partial => 'builtin_artifact_form', :locals => {:scope => {:var_form => var_form}} %>
      <% end %>
    </textarea>
    <textarea id="artifact_template_external" class="template">
      <%= render :partial => 'external_artifact_table_headers' %>
      <%= scope[:form].fields_for :artifactConfigs, :index => "" do |var_form| %>
      <td class="name_value_cell">
        <label>External Artifact</label>
        <%= var_form.hidden_field "artifactTypeValue", :id => nil, :value => 'External Artifact' -%>
      </td>
      <td>
        <%= var_form.text_field "id", :class => "form_input artifact_source", :id => nil -%>
      </td>
      <td>
        <%= var_form.text_field "storeId", :class => "form_input artifact_source", :id => nil -%>
      </td>
      <td>
        <div id="plugin_container">
          <div id="plugin_input_if_required">
    <%= var_form.hidden_field "pluginId", :id => 'artifact_plugin_id' -%>
  </div>
  <div id="plugin_form">
    <% dom_id_for_publish_view = random_dom_id %>
    <% form_name_provider_obj = form_name_provider(scope[:var_form]) %>
    <% plugged_artifact_angular_controller_element_id = form_name_provider_obj.css_id_for("angular_" + dom_id_for_publish_view) %>
    <% plugged_artifact_data_element_id = form_name_provider_obj.css_id_for("data_" + dom_id_for_publish_view) %>
  </div>
        </div>
      </td>
    </textarea>

        <div class="artifact">
      <% scope[:built_in_collection].each do |variable| -%>
        <%= scope[:form].fields_for com.thoughtworks.go.config.JobConfig::ARTIFACT_CONFIGS, variable, :index => "" do |var_form| %>
          <table class="artifact">
            <%= render :partial => 'built_in_artifact_table_headers' %>
            <tbody class="artifact">
            <tr>
              <td class="name_value_cell">
                <%= var_form.label variable.getArtifactTypeValue() -%>
                <%= var_form.hidden_field "artifactTypeValue", :class => "form_input artifact_source", :id => nil -%>
              </td>
              <td class="name_value_cell">
                <%= var_form.text_field "source", :class => "form_input artifact_source", :id => nil -%>
                <%= error_message_on(variable, "source", :css_class => "form_error") %>
              </td>
              <td class="name_value_cell">
                <%= var_form.text_field "destination", :class => "form_input artifact_destination", :id => nil -%>
                <%= error_message_on(variable, "destination", :css_class => "form_error") %>
              </td>
              <td class="name_value_cell">
                <span class="icon_remove delete_parent"></span>
              </td>
            </tr>
        <% end %>
      <%- end -%>
      </tbody>
      </table>
    </div>
    <td class="name_value_cell">
      <select class="small" id="select_artifact_type">
        <option value="Build Artifact">Build Artifact</option>
        <option value="Test Artifact">Test Artifact</option>
        <option value="External Artifact">External Artifact</option>
      </select>
    </td>
    <%= action_icon({:type => "add", :text => 'Add', :href => "#", :class => "skip_dirty_stop", :id => "add_artifact"}) %>
  </div>
  <div class="clear"></div>
</div>

<script type="text/javascript">
  Util.on_load(function () {
    jQuery('#add_artifact').click(function (event) {
      determineAppropriateFormToShow(jQuery('#select_artifact_type').val());
    });

    function determineAppropriateFormToShow(artifactTypeValue) {
      switch (artifactTypeValue) {
        case 'Build Artifact':
          addBuiltInFormRowFor('#artifact_template_build');
          break;
        case 'Test Artifact':
          addBuiltInFormRowFor('#artifact_template_test');
          break;
        case 'External Artifact':
          addBuiltInFormRowFor('#artifact_template_external');
          jQuery("input[name='job[artifactConfigs][][storeId]']").on('change focusout' ,function (event) {
            var selectedInput = event.currentTarget || event.target;
            var selectedInput = event.currentTarget || event.target;
            var storeIdToPluginId =<%== scope[:store_id_to_plugin_id].to_json %>;
            var pluginId = storeIdToPluginId[selectedInput.value];
            jQuery('#plugin_form').html(`<%== render :partial => 'external_artifact_form', :locals => {:scope => {:var_form => var_form, :plugged_artifact_angular_controller_element_id => plugged_artifact_angular_controller_element_id, :plugged_artifact_data_element_id => plugged_artifact_data_element_id}} %>`);
            var viewTemplate = <%== scope[:artifact_plugin_to_view].to_json%>;
            //jQuery('#plugin_view_template').html(viewTemplate);
            setPluginIdField(selectedInput);
            debugger;
            initializeAngular();
          });
          break;
      }
    }

    function initializeAngular() {
      var form_name_prefix = "<%= form_name_provider_obj.form_name_prefix %>";
      var plugged_artifact_angular_controller_element_id = "<%= plugged_artifact_angular_controller_element_id %>";
      var plugged_artifact_data_element_id = "<%= plugged_artifact_data_element_id %>";
      new TaskPluginView().initialize(plugged_artifact_angular_controller_element_id, plugged_artifact_data_element_id, form_name_prefix);

      new TaskPluginView().bootstrapAngular();
    }

    function setPluginIdField(selectedInput) {
      var store_id_to_plugin_id = JSON.parse('<%== scope[:store_id_to_plugin_id].to_json%>');
      jQuery('#artifact_plugin_id').val(store_id_to_plugin_id[selectedInput.value]);
    }

    function addBuiltInFormRowFor(selector) {
      var rowCreator = new EnvironmentVariables.RowCreator(jQuery(selector), 'tr', '.delete_parent');
      var variables  = new EnvironmentVariables(
        jQuery('div.artifact'),
        rowCreator,
        null,
        function (inputs) {
          inputs.dirty_form();
        },
        function (row) {
          row.parents("form.dirtyform").data("dirty", true);
        });
      variables.addDefaultRow();
    }
  });
</script>
<% end %>